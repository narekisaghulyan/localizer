//module: Localizer
//inputs: positions of the microphones & TDOAs
//outputs:the position of the acoustic source <x,y>

module localizer(
   input signed [25:0] tau1,
   input signed [25:0] tau2,		 
   input signed [25:0] tau3,
   output reg signed [23:0] posx,
   output reg signed [23:0] posy, 
   output [23:0] testing
		 
		 
		 
); 
   localparam [23:0] x1 = $floor(0.08*65536);
   localparam [23:0] y1 = $floor(0.16*65536);
   localparam [23:0] x2 = $floor(0.16*65536);
   localparam [23:0] y2 = $floor(0.16*65536);
   localparam [23:0] x3 = $floor(0.16*65536);
   localparam [23:0] y3 = 0;
   localparam [23:0] v  = $floor(340.3);

   //not sure if these are supposed to be signed ???????????????????????????????????
   
   wire signed [51:0] 	    A2;
   wire signed [51:0] 	    A3;
   wire signed [51:0] 	    B2;
   wire signed [51:0] 	    B3;
   wire signed [127:0] 	    C2;
   wire signed [127:0] 	    C3;

   wire signed [179:0] 	    numx;
   wire signed [179:0] 	    numy;
   wire signed [103:0] 	    denom;

   wire signed [ 71:0] 	    c2a, c2b, a2r;

   //assign a2a = $signed($signed(2*x2)*$signed(tau1));
   //assign a2b = $signed($signed(2*x1)*$signed(tau2));
   //assign a2r = $signed(a2a-a2b);
   
   assign testing = 2*x1*tau2;
   assign A2 = $signed($signed(2*x2)*$signed(tau1)) - $signed($signed(2*x1)*$signed(tau2));
   assign A3 = $signed($signed(2*x3)*$signed(tau1) - $signed(2*x1)*$signed(tau3));
   assign B2 = $signed($signed(2*y2)*$signed(tau1) - $signed(2*y1)*$signed(tau2));
   assign B3 = $signed($signed(2*y3)*$signed(tau1) - $signed(2*y1)*$signed(tau3));

   wire [99:0] 	    c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17;
   wire [99:0]      d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16, d17;

   assign c1 =  $signed(v**2)*$signed(tau2)*$signed(tau1); 
   assign c2 =  $signed($signed(tau2) - $signed(tau1));
   assign c3 =  $signed(tau2);
   assign c4 =  $signed(x1)*$signed(x1);
   assign c5 =  $signed(y1)*$signed(y1);
   assign c6 =  $signed(tau1);
   assign c7 =  $signed(x2)*$signed(x2);
   assign c8 =  $signed(y2)*$signed(y2);
   assign c9 =  $signed($signed(c1)*$signed(c2)); //v**2*tau2*tau1*(tau2 - tau1)
   assign c10 = $signed(c3);    //tau2
   assign c11 = $signed(c4)+ $signed(c5); //x1**2 + y1**2
   assign c12 = $signed(c6);    //tau1
   assign c13 = $signed(c7)+ $signed(c8); //x2**2 + y2**2
   assign c14 = $signed(c3*c11);
   assign c15 = $signed(c6*c13);
   assign c16 = $signed(c9+c14);
   assign c17 = $signed(c16-c15);
 
   
   assign C2 = c17;
   

  // assign c6 = $signed($signed(c1)*$signed(c2) + $signed(c3) - $signed(c4));
   /*
   assign C2 = $signed(
		       $signed(v**2)*
		       $signed(tau2)*
		       $signed(tau1)*
		       $signed($signed(tau2) - $signed(tau1)) + 
		       $signed(tau2)*
		       $signed($signed(x1)*$signed(x1) + $signed(y1)*$signed(y1)) - 
		       $signed(tau1)*
		       $signed($signed(x2)*$signed(x2) + $signed(y2)*$signed(y2))
		       );
   */
   assign d1 =  $signed(v**2)*$signed(tau3)*$signed(tau1); 
   assign d2 =  $signed($signed(tau3) - $signed(tau1));
   assign d3 =  $signed(tau3);
   assign d4 =  $signed(x1)*$signed(x1);
   assign d5 =  $signed(y1)*$signed(y1);
   assign d6 =  $signed(tau1);
   assign d7 =  $signed(x3)*$signed(x3);
   assign d8 =  $signed(y2)*$signed(y2);
   assign d9 =  $signed(d1*d2); //v**2*tau2*tau1*(tau2 - tau1)
   assign d10 = $signed(d3);    //tau2
   assign d11 = $signed(d4)+ $signed(d5); //x1**2 + y1**2
   assign d12 = $signed(d6);    //tau1
   assign d13 = $signed(d7)+ $signed(d8); //x2**2 + y2**2
   assign d14 = $signed(d3*d11);
   assign d15 = $signed(d6*d13);
   assign d16 = $signed(d9+d14);
   assign d17 = $signed(d16-d15);

   assign C3 = d17; 
   
//   assign C3 = $signed($signed((v**2)*tau3)*$signed(tau1)*$signed($signed(tau3) - $signed(tau1)) + $signed(tau3)*$signed($signed(x1**2) + $signed(y1**2))
// - $signed(tau1)*$signed($signed(x3**2) + $signed(y3**2)));
   
   assign numx  = $signed($signed(B2)*$signed(C3) - $signed(B3)*$signed(C2));
   assign numy  = $signed($signed(A3)*$signed(C2) - $signed(A2)*$signed(C3));
   assign denom = $signed($signed(A2)*$signed(B3) - $signed(A3)*$signed(B2)); 


   wire [50:0] tempx;
   wire [50:0] tempy;
   
   assign tempx = $signed(numx)/$signed(denom);  // 24-bit fixed point; 8 bits int, 16 bits frac
   assign tempy = $signed(numy)/$signed(denom);

   always @(*) begin
      posx = tempx [23:0];
      posy = tempy [23:0];
   end
   
   
endmodule
 
   //function for A
   /*
   function [35:0] A;
      input [1:0]   m;

      begin
	 if(m == 2'b10)      A = 2*x2*tau1 - 2*x1*tau2;
	 else if(m == 2'b11) A = 2*x3*tau1 - 2*x1*tau3;
	 else                A = 0;
      end
   endfunction // if
    

    //fuction for B
   function [35:0] B;
      input [1:0] m;

      begin

	 if(m == 2'b10)      B = 2*y2*tau1 - 2*y1*tau2;
	 else if(m == 2'b11) B = 2*y3*tau1 - 2*y1*tau3;
	 else                B = 0;
      end
   endfunction // if

   //function for C
   function [79:0] C;
      input [1:0] m;

      begin
	 if(m == 2'b10)      C = (v**2)*tau2*tau1*(tau2 - tau1) + tau2*((x1**2) + (y1**2)) - tau1*((x2**2) + (y2**2));
	 else if(m == 2'b11) C = (v**2)*tau3*tau1*(tau3 - tau1) + tau3*((x1**2) + (y1**2)) - tau1*((x3**2) + (y3**2));
	 else                C = 0;
      end
   endfunction // if
   
      
   assign A2 = A(2'b10);
   assign A3 = A(2'b11);
   assign B2 = B(2'b10);
   assign B3 = B(2'b11);
   assign C2 = C(2'b10);
   assign C3 = C(2'b11);
   */        
	 

   
   
   
   
		 
     		 
